name: Build and Test

on:
  workflow_call:
    inputs:
      build_type:
        description: 'Type of build (Release or Debug)'
        required: false
        default: 'Release'
        type: string
      update_version:
        description: 'Whether to update version in CMakeLists.txt'
        required: false
        default: false
        type: boolean
      version:
        description: 'New version to set in CMakeLists.txt'
        required: false
        default: ''
        type: string
    outputs:
      artifact_name:
        description: "Name of the uploaded artifact"
        value: ${{ jobs.build.outputs.artifact_name }}

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    outputs:
      artifact_name: ${{ steps.set-artifact-name.outputs.name }}
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Build and Test
      run: |
        chmod +x scripts/build.sh
        if [ "${{ inputs.update_version }}" = "true" ]; then
          scripts/build.sh --build-type ${{ inputs.build_type }} --update-version ${{ inputs.version }} --update-version-h ${{ inputs.version }}
        else
          scripts/build.sh --build-type ${{ inputs.build_type }}
        fi
    
    - name: Set Artifact Name
      id: set-artifact-name
      run: |
        if [ "${{ inputs.update_version }}" = "true" ]; then
          echo "name=tessa-audio-${{ matrix.os }}-v${{ inputs.version }}" >> $GITHUB_OUTPUT
        else
          PR_NUMBER="${{ github.event.pull_request.number }}"
          if [ -n "$PR_NUMBER" ]; then
            echo "name=tessa-audio-${{ matrix.os }}-pr-$PR_NUMBER" >> $GITHUB_OUTPUT
          else
            echo "name=tessa-audio-${{ matrix.os }}" >> $GITHUB_OUTPUT
          fi
        fi
      
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.set-artifact-name.outputs.name }}
        path: |
          build/tessa_audio
          build/lib*tessa_audio* 